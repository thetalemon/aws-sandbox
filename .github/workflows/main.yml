# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
env:
  SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
  SLACK_USERNAME: デプロイ通知
  SLACK_ICON: https://user-images.githubusercontent.com/47911711/166111995-6fcebd47-0ac3-4bf4-bff0-f9584897081e.JPG

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      - name: Slack Notification on start
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_TITLE: release start
          SLACK_MESSAGE: リリースを開始します
          SLACK_COLOR: good
      - name: generate tag
        run: |
           echo "tag-$(TZ=Asia/Tokyo date +%Y%m%d-%H%M%S)" > TAG_NAME
           git tag $(cat TAG_NAME)
           git push origin $(cat TAG_NAME)
      - name: test and build and deploy
        id: main_step
        run: |
           cd /home/runner/work/aws-sandbox/aws-sandbox/aws-sandbox/hello-world
           npm init -y
           npm install chai
           npm install mocha
          #  npm run test /home/runner/work/aws-sandbox/aws-sandbox/aws-sandbox/hello-world/tests/unit/test-handler.js
           sam build -t /home/runner/work/aws-sandbox/aws-sandbox/aws-sandbox/template.yaml
           sam deploy --no-confirm-changeset --no-fail-on-empty-changeset --config-file /home/runner/w
     
     
      - if: steps.main_step.outcome =='success'
        name: Slack Notification on Success
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_TITLE: release start
          SLACK_MESSAGE: リリース終了
          SLACK_COLOR: good
          
      - if: failure() && steps.main_step.outcome !='failure'
        name: Slack Notification on Failure
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_TITLE: release start
          SLACK_MESSAGE: テスト前エラー
          SLACK_COLOR: error
      
      - if: failure() && steps.main_step.outcome =='failure'
        name: Slack Notification on Failure
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_TITLE: release start
          SLACK_MESSAGE: リリース失敗
          SLACK_COLOR: error
